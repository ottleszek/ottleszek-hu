// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WillBeThere.Backend.Context;

#nullable disable

namespace WillBeThere.Backend.Migrations
{
    [DbContext(typeof(WillBeThereMysqlContext))]
    partial class WillBeThereMysqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WillBeThere.Shared.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Door")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<Guid?>("PublicScapeID")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<string>("PublicSpaceName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PublicScapeID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("OrgranizationRigth")
                        .HasColumnType("char(36)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationAdminUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationAdminUser");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationProgram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeffered")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("OrganizationOwnerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProgramOwnerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrganizationOwnerId");

                    b.HasIndex("ProgramOwnerId");

                    b.ToTable("OrgranizationProgram");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationProgramCategories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("OrganizationProgramId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationProgramId");

                    b.ToTable("OrganizationProgramCategories");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Participation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Evaluation")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganizationProgramId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RegisteredUserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationProgramId");

                    b.HasIndex("RegisteredUserId");

                    b.ToTable("Participation");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.ProgramCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProgramCategory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f4d629ed-f9de-4974-a296-a26cfba12dbe"),
                            Name = "vallás"
                        },
                        new
                        {
                            Id = new Guid("46dee8f4-2b0e-47c0-8827-332e494c2e14"),
                            Name = "nevelés"
                        },
                        new
                        {
                            Id = new Guid("ca584071-2dfe-4cf6-96b8-4729bc0e380d"),
                            Name = "házasság"
                        },
                        new
                        {
                            Id = new Guid("839b4139-9106-47f3-80ff-c0804d3cf029"),
                            Name = "férfi identitás"
                        },
                        new
                        {
                            Id = new Guid("f2ea3d2f-13f2-4140-bf90-999995da865f"),
                            Name = "ifjúság"
                        });
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.PublicSpace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PublicSpace");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.RegisteredUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RegisteredUser");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Address", b =>
                {
                    b.HasOne("WillBeThere.Shared.Models.PublicSpace", "PublicSpace")
                        .WithMany("Addresses")
                        .HasForeignKey("PublicScapeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PublicSpace");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationAdminUser", b =>
                {
                    b.HasOne("WillBeThere.Shared.Models.RegisteredUser", "Admin")
                        .WithOne("OrganizationAdminUser")
                        .HasForeignKey("WillBeThere.Shared.Models.OrganizationAdminUser", "AdminId");

                    b.HasOne("WillBeThere.Shared.Models.Organization", "Organization")
                        .WithMany("OranizationAdminUsers")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Admin");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationProgram", b =>
                {
                    b.HasOne("WillBeThere.Shared.Models.Address", "Address")
                        .WithMany("OrganizationPrograms")
                        .HasForeignKey("AddressId");

                    b.HasOne("WillBeThere.Shared.Models.Organization", "Organization")
                        .WithMany("Programs")
                        .HasForeignKey("OrganizationOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WillBeThere.Shared.Models.RegisteredUser", "ProgramOwner")
                        .WithMany("OrganizationPrograms")
                        .HasForeignKey("ProgramOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Organization");

                    b.Navigation("ProgramOwner");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationProgramCategories", b =>
                {
                    b.HasOne("WillBeThere.Shared.Models.OrganizationProgram", "OrganizationProgram")
                        .WithMany("ProgramCategories")
                        .HasForeignKey("OrganizationProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WillBeThere.Shared.Models.ProgramCategory", "ProgramCategory")
                        .WithMany("OrganizationPrograms")
                        .HasForeignKey("OrganizationProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationProgram");

                    b.Navigation("ProgramCategory");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Participation", b =>
                {
                    b.HasOne("WillBeThere.Shared.Models.OrganizationProgram", "OrganizationProgram")
                        .WithMany("ProgrammeParticipants")
                        .HasForeignKey("OrganizationProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WillBeThere.Shared.Models.RegisteredUser", "Participant")
                        .WithMany("RegisteredUserPaticipations")
                        .HasForeignKey("RegisteredUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationProgram");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Address", b =>
                {
                    b.Navigation("OrganizationPrograms");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Organization", b =>
                {
                    b.Navigation("OranizationAdminUsers");

                    b.Navigation("Programs");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationProgram", b =>
                {
                    b.Navigation("ProgramCategories");

                    b.Navigation("ProgrammeParticipants");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.ProgramCategory", b =>
                {
                    b.Navigation("OrganizationPrograms");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.PublicSpace", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.RegisteredUser", b =>
                {
                    b.Navigation("OrganizationAdminUser");

                    b.Navigation("OrganizationPrograms");

                    b.Navigation("RegisteredUserPaticipations");
                });
#pragma warning restore 612, 618
        }
    }
}
