// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WillBeThere.Backend.Context;

#nullable disable

namespace WillBeThere.Backend.Migrations
{
    [DbContext(typeof(WillBeThereMysqlContext))]
    partial class WillBeThereMysqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WillBeThere.Shared.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Door")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<Guid>("PublicScapeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PublicSpaceName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("PublicScapeId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("097855e5-b5dc-410c-962a-18d90234b59a"),
                            Door = -1,
                            Floor = -1,
                            House = 1,
                            Locality = "Szeged",
                            PostalCode = 6757,
                            PublicScapeId = new Guid("fd3b63a6-3cf6-4282-b97e-4863a60ee372"),
                            PublicSpaceName = "Napraforgó utca"
                        },
                        new
                        {
                            Id = new Guid("88ccabcc-517a-406d-8f97-7171b5140ef5"),
                            Door = -1,
                            Floor = -1,
                            House = 49,
                            Locality = "Szeged",
                            PostalCode = 6757,
                            PublicScapeId = new Guid("fd3b63a6-3cf6-4282-b97e-4863a60ee372"),
                            PublicSpaceName = "Koszorú utca"
                        },
                        new
                        {
                            Id = new Guid("1e90a60f-23de-469b-894f-475ee1776670"),
                            Door = -1,
                            Floor = -1,
                            House = 33,
                            Locality = "Szeged",
                            PostalCode = 6757,
                            PublicScapeId = new Guid("fd3b63a6-3cf6-4282-b97e-4863a60ee372"),
                            PublicSpaceName = "Koszorú utca"
                        },
                        new
                        {
                            Id = new Guid("589290f9-8098-4bcc-8b7e-636cdb1dc6b1"),
                            Door = -1,
                            Floor = -1,
                            House = 50,
                            Locality = "Szeged",
                            PostalCode = 6710,
                            PublicScapeId = new Guid("f811251b-54d2-4feb-95f4-e09fdac81f0e"),
                            PublicSpaceName = "Kapisztrán"
                        },
                        new
                        {
                            Id = new Guid("845061b6-9f3a-458e-8212-bcf6a6aa21fc"),
                            Door = -1,
                            Floor = -1,
                            House = 12,
                            Locality = "Szeged",
                            PostalCode = 6720,
                            PublicScapeId = new Guid("a881178b-c510-4476-889e-8e7e53fb80a9"),
                            PublicSpaceName = "Dugonics"
                        });
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Editor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Editors");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<Guid?>("OrganizationCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationCategoryId");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9406d91c-0644-481e-bb8c-ddd925afb315"),
                            Description = "Gyálaréti Gyuris család programnaptára",
                            Name = "Gyálaréti Gyuris család",
                            Url = "gyuris-gyalaret",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("3a9cd136-12ad-48b3-9f36-d30add467854"),
                            Description = "Kikindáról elszármazott Gyuris Család",
                            Name = "Kikindai Gyuris család",
                            Url = "gyuris-kikinda",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("734b04cb-cf30-45ef-9a75-50fb221edab8"),
                            Description = "Gyálaréten működő férfi sátor közösség",
                            Name = "Gyálaréti férfi sátor",
                            OrganizationCategoryId = new Guid("5cd06ad6-ec0a-4efb-be73-e5d27dae1506"),
                            Url = "ferfisator.filia.szeged-gyalaret.ottleszek.hu",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("2a9cecea-d4df-498f-b7f2-416a455e6dc3"),
                            Description = "Magyarorszagi férfi sátor közösség",
                            Name = "Férfi sátor",
                            OrganizationCategoryId = new Guid("5cd06ad6-ec0a-4efb-be73-e5d27dae1506"),
                            Url = "ferfisator.filia.szeged-gyalaret.ottleszek.hu",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("de390825-2a35-481f-82e4-5f2d3439dc3d"),
                            Description = "Gyálaréten működő meditációs csoprot amely a Jézus imát gyakorolja",
                            Name = "Gyálaréti meditációs imacsoport",
                            OrganizationCategoryId = new Guid("503b9d1e-52a6-4cf9-8599-b663c741ff9d"),
                            Url = "meditacio.filia.szeged-gyalaret.ottleszek.hu",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("2cc51b26-578b-48f4-b17e-520a28988c60"),
                            Description = "Gyálaréti filához tartozó csaladcsoport",
                            Name = "Gyálaréti családcsoport",
                            OrganizationCategoryId = new Guid("503b9d1e-52a6-4cf9-8599-b663c741ff9d"),
                            Url = "csaladcsoport.flila.szeged-gyalaret.ottleszek.hu",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("499bf7bb-e621-4073-bafd-0da2968fb477"),
                            Description = "Gyálaréti művelődési ház",
                            Name = "Gyálaréti művelődési ház",
                            OrganizationCategoryId = new Guid("6cca6b59-02eb-4ad1-8d0f-bc731f53ef0a"),
                            Url = "szeged-gyalaret.szeged-gyalaret.ottleszek.hu",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("c69976a2-8ef4-42f9-a6af-7d9355055cc7"),
                            Description = "Szentmihályi művelődési ház",
                            Name = "Szentmihályi művelődési ház",
                            OrganizationCategoryId = new Guid("6cca6b59-02eb-4ad1-8d0f-bc731f53ef0a"),
                            Url = "muvelodesihaz.szeged-szentmihaly.ottleszek.hu",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("f662779d-d6b9-4362-9298-4b6bd6cc7d9b"),
                            Description = "Szeged-Csanád Egyházmegye Pasztorális helynöksége",
                            Name = "Szeged-Csanád Egyházmegye Pasztorális helynökség",
                            OrganizationCategoryId = new Guid("503b9d1e-52a6-4cf9-8599-b663c741ff9d"),
                            Url = "pasztoralis-helynokseg.szeged-csanádi-egyhazmegye.ottleszek.hu",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("226b760a-a5ab-469a-b17d-2df2680f00b8"),
                            Description = "Szeged-Csanád egyházmegye Pasztorális helynökség - Családpasztoráció, ",
                            Name = "Szeged-Csanád egyházmegye Pasztorális helynökség - Családpasztoráció",
                            OrganizationCategoryId = new Guid("503b9d1e-52a6-4cf9-8599-b663c741ff9d"),
                            Url = "pasztoralis-helynokseg.szeged-csanádi-egyhazmegye.ottleszek.hu",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("855c57c1-ac33-4f10-b080-982841cddbdf"),
                            Description = "Szeged-Csanád egyházmegye Pasztorális helynökség - Korházi lelkészség",
                            Name = "Szeged-Csanád egyházmegye Pasztorális helynökség - Korházi lelkészség",
                            OrganizationCategoryId = new Guid("503b9d1e-52a6-4cf9-8599-b663c741ff9d"),
                            Url = "korhazi-lelekszseg.pasztoralis-helynokseg.szeged-csanádi - egyhazmegye.ottleszek.hu",
                            Website = ""
                        },
                        new
                        {
                            Id = new Guid("7c49006e-a0e4-4e67-b196-87d3beefcde7"),
                            Description = "Munkásmisszió, vezetői kör",
                            Name = "Munkáasmisszió",
                            OrganizationCategoryId = new Guid("503b9d1e-52a6-4cf9-8599-b663c741ff9d"),
                            Url = "vezetok.munkasmisszio.ottleszek.hu",
                            Website = ""
                        });
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ProgramCategoryes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("503b9d1e-52a6-4cf9-8599-b663c741ff9d"),
                            Name = "vallás"
                        },
                        new
                        {
                            Id = new Guid("fc7da9bc-ca39-4a70-86b5-9a8751e3866a"),
                            Name = "nevelés"
                        },
                        new
                        {
                            Id = new Guid("f07a4fef-3c2a-453f-950e-cf75a3e26da2"),
                            Name = "házasság"
                        },
                        new
                        {
                            Id = new Guid("5cd06ad6-ec0a-4efb-be73-e5d27dae1506"),
                            Name = "férfi identitás"
                        },
                        new
                        {
                            Id = new Guid("0057db2f-aa9f-40d6-9ec3-7a40b23fa9b7"),
                            Name = "ifjúság"
                        },
                        new
                        {
                            Id = new Guid("6cca6b59-02eb-4ad1-8d0f-bc731f53ef0a"),
                            Name = "művelődés"
                        });
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationEditor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationEditors");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationProgram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeffered")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProgramOwnerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("OrgranizationPrograms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a2f3a10-6a30-400a-a6b0-45ce02304fb3"),
                            AddressId = new Guid("88ccabcc-517a-406d-8f97-7171b5140ef5"),
                            Description = "Csendes ima.",
                            IsDeffered = false,
                            IsPublic = true,
                            OrganizationId = new Guid("de390825-2a35-481f-82e4-5f2d3439dc3d"),
                            ProgramOwnerId = new Guid("ba3597d9-f608-4e80-be14-03a3e7387e76"),
                            Start = new DateTime(2024, 8, 7, 20, 30, 0, 0, DateTimeKind.Local),
                            Title = "Meditáció"
                        },
                        new
                        {
                            Id = new Guid("9e3d9970-a1e5-443a-8745-75c89d1a1351"),
                            AddressId = new Guid("845061b6-9f3a-458e-8212-bcf6a6aa21fc"),
                            Description = "Csendes lelkigyakorlat felnőtteknek.",
                            End = new DateTime(2024, 9, 2, 12, 0, 0, 0, DateTimeKind.Local),
                            IsDeffered = false,
                            IsPublic = true,
                            OrganizationId = new Guid("855c57c1-ac33-4f10-b080-982841cddbdf"),
                            ProgramOwnerId = new Guid("80da74e6-a850-47b3-b5fd-0fa1fa002a63"),
                            Start = new DateTime(2024, 9, 1, 18, 0, 0, 0, DateTimeKind.Local),
                            Title = "Lelkigyakorlat"
                        },
                        new
                        {
                            Id = new Guid("d1e8cbf6-5a4b-4831-ba41-ec5573e2e26a"),
                            AddressId = new Guid("88ccabcc-517a-406d-8f97-7171b5140ef5"),
                            Description = "Apasebek tréning.",
                            End = new DateTime(2024, 9, 7, 20, 0, 0, 0, DateTimeKind.Local),
                            IsDeffered = false,
                            IsPublic = true,
                            OrganizationId = new Guid("734b04cb-cf30-45ef-9a75-50fb221edab8"),
                            ProgramOwnerId = new Guid("6e9506b2-9d5b-40dc-814a-4153e0d305d6"),
                            Start = new DateTime(2024, 9, 7, 18, 0, 0, 0, DateTimeKind.Local),
                            Title = "Férfi sátor tréning"
                        },
                        new
                        {
                            Id = new Guid("be2b7b85-c273-40b2-ae6c-664b4d0a2fdd"),
                            AddressId = new Guid("845061b6-9f3a-458e-8212-bcf6a6aa21fc"),
                            Description = "Lányoknak...",
                            End = new DateTime(2024, 11, 17, 21, 0, 0, 0, DateTimeKind.Local),
                            IsDeffered = false,
                            IsPublic = true,
                            OrganizationId = new Guid("f662779d-d6b9-4362-9298-4b6bd6cc7d9b"),
                            ProgramOwnerId = new Guid("bc565be1-171a-4795-9656-6ec58424e461"),
                            Start = new DateTime(2024, 11, 17, 15, 0, 0, 0, DateTimeKind.Local),
                            Title = "Ciklus show"
                        },
                        new
                        {
                            Id = new Guid("40233e2b-3ef6-4bd4-a3fe-9c8fb0852ae9"),
                            AddressId = new Guid("1e90a60f-23de-469b-894f-475ee1776670"),
                            Description = "Délalföldi",
                            End = new DateTime(2024, 9, 2, 2, 30, 0, 0, DateTimeKind.Local),
                            IsDeffered = false,
                            IsPublic = true,
                            OrganizationId = new Guid("499bf7bb-e621-4073-bafd-0da2968fb477"),
                            ProgramOwnerId = new Guid("baa85118-12ee-4275-8d58-68ca602d9cf6"),
                            Start = new DateTime(2024, 9, 1, 21, 0, 0, 0, DateTimeKind.Local),
                            Title = "Táncház"
                        },
                        new
                        {
                            Id = new Guid("74ac7a11-4548-46a2-ae11-3b5f5051ab46"),
                            AddressId = new Guid("88ccabcc-517a-406d-8f97-7171b5140ef5"),
                            Description = "Férfiaknak",
                            IsDeffered = false,
                            IsPublic = false,
                            OrganizationId = new Guid("2a9cecea-d4df-498f-b7f2-416a455e6dc3"),
                            ProgramOwnerId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Start = new DateTime(2024, 7, 7, 18, 0, 0, 0, DateTimeKind.Local),
                            Title = "Férfi sátor"
                        },
                        new
                        {
                            Id = new Guid("c279b9e3-0be7-47d4-a30d-c5eeadddcbe0"),
                            AddressId = new Guid("88ccabcc-517a-406d-8f97-7171b5140ef5"),
                            Description = "Férfiaknak",
                            IsDeffered = false,
                            IsPublic = false,
                            OrganizationId = new Guid("2a9cecea-d4df-498f-b7f2-416a455e6dc3"),
                            ProgramOwnerId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Start = new DateTime(2024, 8, 3, 18, 0, 0, 0, DateTimeKind.Local),
                            Title = "Férfi sátor"
                        },
                        new
                        {
                            Id = new Guid("cb7846ca-f8da-4e62-bfc3-4982de05d0b2"),
                            AddressId = new Guid("88ccabcc-517a-406d-8f97-7171b5140ef5"),
                            Description = "Férfiaknak",
                            End = new DateTime(2024, 9, 9, 21, 0, 0, 0, DateTimeKind.Local),
                            IsDeffered = false,
                            IsPublic = false,
                            OrganizationId = new Guid("2a9cecea-d4df-498f-b7f2-416a455e6dc3"),
                            ProgramOwnerId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Start = new DateTime(2024, 9, 9, 18, 0, 0, 0, DateTimeKind.Local),
                            Title = "Férfi sátor"
                        },
                        new
                        {
                            Id = new Guid("5a957ba3-b8b9-4098-a17d-32534b2d0e13"),
                            AddressId = new Guid("88ccabcc-517a-406d-8f97-7171b5140ef5"),
                            Description = "Családoknak",
                            End = new DateTime(2024, 9, 2, 1, 30, 0, 0, DateTimeKind.Local),
                            IsDeffered = false,
                            IsPublic = false,
                            OrganizationId = new Guid("2cc51b26-578b-48f4-b17e-520a28988c60"),
                            ProgramOwnerId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Start = new DateTime(2024, 9, 1, 21, 0, 0, 0, DateTimeKind.Local),
                            Title = "Családcsoport"
                        },
                        new
                        {
                            Id = new Guid("a96bff66-da30-442f-8b2d-5a4f821cb10d"),
                            AddressId = new Guid("88ccabcc-517a-406d-8f97-7171b5140ef5"),
                            Description = "Apasebek tréning.",
                            End = new DateTime(2024, 9, 22, 20, 0, 0, 0, DateTimeKind.Local),
                            IsDeffered = true,
                            IsPublic = true,
                            OrganizationId = new Guid("734b04cb-cf30-45ef-9a75-50fb221edab8"),
                            ProgramOwnerId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Start = new DateTime(2024, 9, 22, 18, 0, 0, 0, DateTimeKind.Local),
                            Title = "Férfi sátor tréning"
                        },
                        new
                        {
                            Id = new Guid("c2969fec-4037-4ee7-8bd3-d5908f623b4b"),
                            AddressId = new Guid("88ccabcc-517a-406d-8f97-7171b5140ef5"),
                            Description = "Férfiaknak",
                            End = new DateTime(2024, 9, 12, 21, 0, 0, 0, DateTimeKind.Local),
                            IsDeffered = true,
                            IsPublic = false,
                            OrganizationId = new Guid("2a9cecea-d4df-498f-b7f2-416a455e6dc3"),
                            ProgramOwnerId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Start = new DateTime(2024, 9, 12, 18, 0, 0, 0, DateTimeKind.Local),
                            Title = "Férfi sátor"
                        });
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Participation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Evaluation")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganizationProgramId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RegisteredUserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Participations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99bdd0fa-e4f0-40cf-83a5-a61d30698a91"),
                            Evaluation = 9,
                            OrganizationProgramId = new Guid("7a2f3a10-6a30-400a-a6b0-45ce02304fb3"),
                            RegisteredUserId = new Guid("1aa6800e-5170-4b9a-a7a3-e67f396cda1e")
                        },
                        new
                        {
                            Id = new Guid("14637558-5f89-4c55-9d14-d6fca69e71c8"),
                            Evaluation = 9,
                            OrganizationProgramId = new Guid("7a2f3a10-6a30-400a-a6b0-45ce02304fb3"),
                            RegisteredUserId = new Guid("c0056648-d631-4e65-8088-eb48b15b458a")
                        },
                        new
                        {
                            Id = new Guid("39d1d954-24d9-4831-b165-0af9a04094ef"),
                            Evaluation = -1,
                            OrganizationProgramId = new Guid("9e3d9970-a1e5-443a-8745-75c89d1a1351"),
                            RegisteredUserId = new Guid("52041eb9-9412-4f13-829b-e6c4a1fd894d")
                        },
                        new
                        {
                            Id = new Guid("612dab44-ca3d-4b62-af26-d99b3f224c14"),
                            Evaluation = -1,
                            OrganizationProgramId = new Guid("9e3d9970-a1e5-443a-8745-75c89d1a1351"),
                            RegisteredUserId = new Guid("c0056648-d631-4e65-8088-eb48b15b458a")
                        },
                        new
                        {
                            Id = new Guid("00bff483-a42f-403d-9e93-89c7fffa9601"),
                            Evaluation = -1,
                            OrganizationProgramId = new Guid("d1e8cbf6-5a4b-4831-ba41-ec5573e2e26a"),
                            RegisteredUserId = new Guid("52041eb9-9412-4f13-829b-e6c4a1fd894d")
                        });
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.ProgramOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("ProgramOwners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e9506b2-9d5b-40dc-814a-4153e0d305d6")
                        },
                        new
                        {
                            Id = new Guid("5bef3553-b9f7-44cc-89fc-73d9ef60ff3d")
                        },
                        new
                        {
                            Id = new Guid("bc565be1-171a-4795-9656-6ec58424e461")
                        },
                        new
                        {
                            Id = new Guid("ba3597d9-f608-4e80-be14-03a3e7387e76")
                        },
                        new
                        {
                            Id = new Guid("baa85118-12ee-4275-8d58-68ca602d9cf6")
                        },
                        new
                        {
                            Id = new Guid("80da74e6-a850-47b3-b5fd-0fa1fa002a63")
                        });
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.PublicSpace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("PublicSpacees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd3b63a6-3cf6-4282-b97e-4863a60ee372"),
                            Name = "utca"
                        },
                        new
                        {
                            Id = new Guid("a881178b-c510-4476-889e-8e7e53fb80a9"),
                            Name = "tér"
                        },
                        new
                        {
                            Id = new Guid("c1a1772c-84cb-4afa-8c4f-ebf55de579c0"),
                            Name = "sugárút"
                        },
                        new
                        {
                            Id = new Guid("f811251b-54d2-4feb-95f4-e09fdac81f0e"),
                            Name = "köz"
                        },
                        new
                        {
                            Id = new Guid("20aaef2b-0e0a-43ce-8275-89b4b3f72feb"),
                            Name = "út"
                        });
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.RegisteredUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RegisteredUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1aa6800e-5170-4b9a-a7a3-e67f396cda1e"),
                            FirstName = "Csaba",
                            LastName = "Gyuris"
                        },
                        new
                        {
                            Id = new Guid("c0056648-d631-4e65-8088-eb48b15b458a"),
                            FirstName = "Balázs",
                            LastName = "Szászi"
                        },
                        new
                        {
                            Id = new Guid("52041eb9-9412-4f13-829b-e6c4a1fd894d"),
                            FirstName = "Katalin",
                            LastName = "Gyurisné Hutter"
                        },
                        new
                        {
                            Id = new Guid("581025d7-a318-4d6e-8083-1569b51638de"),
                            FirstName = "Jenei",
                            LastName = "Kornél"
                        },
                        new
                        {
                            Id = new Guid("101020e1-48ef-43d1-9a81-acac083a9221"),
                            FirstName = "Anikó",
                            LastName = "Szászi"
                        },
                        new
                        {
                            Id = new Guid("f3086400-1cc6-49cf-8734-dd8ea68a6638"),
                            FirstName = "Zsuzsanna",
                            LastName = "Szabóné"
                        });
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Address", b =>
                {
                    b.HasOne("WillBeThere.Shared.Models.PublicSpace", "PublicSpace")
                        .WithMany("Addresses")
                        .HasForeignKey("PublicScapeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PublicSpace");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.Organization", b =>
                {
                    b.HasOne("WillBeThere.Shared.Models.OrganizationCategory", "OrganizationCategory")
                        .WithMany("Organizations")
                        .HasForeignKey("OrganizationCategoryId");

                    b.Navigation("OrganizationCategory");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.OrganizationCategory", b =>
                {
                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("WillBeThere.Shared.Models.PublicSpace", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
