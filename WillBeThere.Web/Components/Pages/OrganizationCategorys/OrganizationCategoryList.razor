@page "/organizationcategorylist"
@inject IOrganizationCategoryDataService? _organizationCategoryDataService

<PageTitle>Szervezet kategóriák </PageTitle>

@if (!_isLoaded )
{
    <MudText>Szervezeti kategóriák betöltése.</MudText>
}
else
{
    @if (_organizationCategories is not null)
    {
        <MudText Typo="Typo.h3">Szervezeti kategóriák</MudText>
        <MudText Class="mt-4">Módosítási lehetőség a táblázatban. Módosítás után nyomjon tabulátort!</MudText>
        <div class="d-flex flex-wrap">
            <div class="d-flex justify-start align-center">
                <p class="mud-typography mud-typography-body1 mud-inherit-text mr-2">Módoítás: kikapcsolva</p>
            </div>
            <MudSwitch @bind-Value="_isEditMode">bekapcsolva.</MudSwitch>
        </div>
        <MudDataGrid
                     T="OrganizationCategory" 
                     Items="_organizationCategories"
                     ReadOnly="@_readOnly"
                     EditMode="DataGridEditMode.Cell"
                     Hover="true"
                     Dense="true"
                     Bordered="true"
                     CommittedItemChanges="@CommittedItemChanges"
        >
            <Columns>
                <PropertyColumn Property="pc => pc.Name" Title="Kategória név" Editable="true" />
            </Columns> 

        </MudDataGrid>
        <MudText Class="mt_4">Kategóriák száma: @_organizationCategories.Count</MudText>
    }

}

@code {
    private List<OrganizationCategory>? _organizationCategories = new List<OrganizationCategory>();

    private bool _readOnly => !_isEditMode;
    private bool _isEditMode =false;

    private bool _isLoaded => _organizationCategories is not null;
    private int _numberOfCategories => _organizationCategories is not null ? _organizationCategories.Count : 0;

    protected async override Task OnInitializedAsync()
    {
        if (_organizationCategoryDataService is not null)
        {
            _organizationCategories = await _organizationCategoryDataService.SelectAsync();
        }
    }

    void StartedEditingItem(OrganizationCategory item)
    {
        
    }

    void CommittedItemChanges(OrganizationCategory item)
    {
        Console.WriteLine(item);
    }
}
